{
	"info": {
		"_postman_id": "1d34513a-1053-49d7-9c06-75fd8c8c6b20",
		"name": "PetStore",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "Pet",
			"item": [
				{
					"name": "petFindByStatusPending",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "36f64ad0-f66c-48da-8d4d-5edf4fb2cbd1",
								"exec": [
									"pm.test('Response status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response content-type is json\", function () {",
									"    const type = pm.response.headers.get('Content-Type');",
									"    pm.expect(type).to.include('application/json');",
									"});",
									"",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"",
									"pm.test(\"Status is pending\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData[0].status).to.eql(\"pending\");",
									"});",
									"",
									"pm.test(\"Id is a non-negative integer\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('array');",
									"    responseData.forEach(function(pet) {",
									"        pm.expect(pet.id).to.be.a('number').and.to.satisfy((id) => id >= 0, \"Id should be a non-negative integer\");",
									"    });",
									"});",
									"",
									"",
									"pm.test(\"Name should be a non-empty string\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('array');",
									"    responseData.forEach(function(pet){",
									"        pm.expect(pet.name).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Name should not be empty\");",
									"    });",
									"});",
									"var template = `",
									"<style type=\"text/css\">",
									"    .tftable {font-size:14px;color:#333333;width:100%;border-width: 1px;border-color: #87ceeb;border-collapse: collapse;}",
									"    .tftable th {font-size:18px;background-color:#87ceeb;border-width: 1px;padding: 8px;border-style: solid;border-color: #87ceeb;text-align:left;}",
									"    .tftable tr {background-color:#ffffff;}",
									"    .tftable td {font-size:14px;border-width: 1px;padding: 8px;border-style: solid;border-color: #87ceeb;}",
									"    .tftable tr:hover {background-color:#e0ffff;}",
									"</style>",
									"",
									"<table class=\"tftable\" border=\"1\">",
									"    <tr>",
									"        <th>ID</th>",
									"        <th>Category ID</th>",
									"        <th>Category Name</th>",
									"        <th>Name</th>",
									"        <th>Status</th>",
									"    </tr>",
									"    ",
									"    {{#each response}}",
									"        <tr>",
									"            <td>{{id}}</td>",
									"            <td>{{category.id}}</td>",
									"            <td>{{category.name}}</td>",
									"            <td>{{name}}</td>",
									"            <td>{{status}}</td>",
									"        </tr>",
									"    {{/each}}",
									"</table>",
									"`;",
									"",
									"function constructVisualizerPayload() {",
									"    return {response: pm.response.json()}",
									"}",
									"",
									"pm.visualizer.set(template, constructVisualizerPayload());"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "36934005-05e4-4da5-b661-eef4758b68d5",
					"protocolProfileBehavior": {
						"disableBodyPruning": true,
						"strictSSL": true,
						"followRedirects": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/pet/findByStatus?status=pending",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet",
								"findByStatus"
							],
							"query": [
								{
									"key": "status",
									"value": "pending"
								}
							]
						},
						"description": "\nThis endpoint makes an HTTP GET request to retrieve a list of pets based on their status, with \"pending\" as the status parameter. The response returns a JSON array containing the details of the pets that match the specified status.\n\nThe response will include a status code of 200 indicating a successful request, and the content type will be in JSON format. The JSON array will consist of objects representing each pet, with details such as ID, category, name, photo URLs, tags, and status.\n\nTo add documentation for this endpoint, you can provide information on how to use the \"status\" query parameter to filter the list of pets based on their status.\n"
					},
					"response": []
				}
			],
			"id": "899e3057-a9e2-4f4a-a376-1e2ec24f1218",
			"description": "Everything about your Pets"
		},
		{
			"name": "Store",
			"item": [],
			"id": "6b95c7a0-df19-46d3-aad7-6fab4b528156",
			"description": "Access to Petstore orders."
		},
		{
			"name": "User",
			"item": [],
			"id": "6b3d72d6-d57b-4da4-a3a1-a4ab309ff685",
			"description": "Operations about user."
		}
	]
}